openapi: 3.0.0
info:
  title: Mpumalanga Business Hub API
  description: |
    API documentation for the Mpumalanga Business Hub platform.
    This API provides endpoints for business management, user authentication,
    search functionality, payment processing, and administrative operations.
  version: 1.0.0
  contact:
    name: Mpumalanga Business Hub Support
    email: support@mpbusinesshub.co.za

servers:
  - url: https://api.mpbusinesshub.co.za/api
    description: Production server
  - url: http://localhost:8000/api
    description: Development server

tags:
  - name: Authentication
    description: User authentication endpoints
  - name: Businesses
    description: Business management endpoints
  - name: Search
    description: Search functionality endpoints
  - name: Products
    description: Product management endpoints
  - name: Payments
    description: Payment processing endpoints
  - name: Admin
    description: Administrative endpoints

paths:
  /auth/register:
    post:
      summary: Register a new user account
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - name
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                  minLength: 8
                name:
                  type: string
                businessName:
                  type: string
                packageType:
                  type: string
                  enum: [Basic, Bronze, Silver, Gold]
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Registration successful
                  data:
                    type: object
                    properties:
                      userId:
                        type: integer
                        example: 1
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      summary: Authenticate user and receive access token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                      user:
                        $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /businesses:
    get:
      summary: Get list of businesses
      tags:
        - Businesses
      parameters:
        - name: category
          in: query
          schema:
            type: string
            enum: [Tourism, Agriculture, Construction, Events]
        - name: district
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: List of businesses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      businesses:
                        type: array
                        items:
                          $ref: '#/components/schemas/Business'
                      pagination:
                        $ref: '#/components/schemas/Pagination'

  /businesses/{id}:
    get:
      summary: Get business details by ID
      tags:
        - Businesses
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Business details
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    $ref: '#/components/schemas/BusinessDetails'
        '404':
          description: Business not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /search:
    get:
      summary: Search businesses
      tags:
        - Search
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: object
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Business'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
                      query:
                        type: string
                        example: "hotel"
                      total:
                        type: integer
                        example: 24

  /admin/pending-listings:
    get:
      summary: Get pending business listings for approval
      tags:
        - Admin
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Pending business listings
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Business'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - not an admin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /admin/listings/{id}/approve:
    post:
      summary: Approve or reject a business listing
      tags:
        - Admin
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - approved
              properties:
                approved:
                  type: boolean
                feedback:
                  type: string
      responses:
        '200':
          description: Approval status updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Business listing approved successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - not an admin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: John Doe
        email:
          type: string
          format: email
          example: john@example.com
        role:
          type: string
          enum: [user, admin]
          example: user
        created_at:
          type: string
          format: date-time
    
    Business:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Sunset Safari Lodge
        description:
          type: string
          example: Luxury lodge located in the heart of Mpumalanga
        category:
          type: string
          example: Tourism
        district:
          type: string
          example: Ehlanzeni
        package_type:
          type: string
          enum: [Basic, Bronze, Silver, Gold]
          example: Gold
        logo:
          type: string
          format: uri
          example: https://example.com/images/sunset-lodge-logo.jpg
        verification_status:
          type: string
          enum: [pending, verified, rejected]
          example: verified
        rating:
          type: number
          format: float
          example: 4.5
        created_at:
          type: string
          format: date-time
    
    BusinessDetails:
      allOf:
        - $ref: '#/components/schemas/Business'
        - type: object
          properties:
            contact:
              type: object
              properties:
                phone:
                  type: string
                  example: "+27 123 456 789"
                email:
                  type: string
                  format: email
                  example: info@sunsetlodge.co.za
                website:
                  type: string
                  format: uri
                  example: https://www.sunsetlodge.co.za
                whatsapp:
                  type: string
                  example: "+27 123 456 789"
            address:
              type: object
              properties:
                street:
                  type: string
                  example: 123 Main Road
                city:
                  type: string
                  example: Nelspruit
                postal_code:
                  type: string
                  example: "1200"
                coordinates:
                  type: object
                  properties:
                    latitude:
                      type: number
                      example: -25.465
                    longitude:
                      type: number
                      example: 30.985
            social_media:
              type: object
              properties:
                facebook:
                  type: string
                  format: uri
                  example: https://facebook.com/sunsetlodge
                instagram:
                  type: string
                  format: uri
                  example: https://instagram.com/sunsetlodge
                twitter:
                  type: string
                  format: uri
                  example: https://twitter.com/sunsetlodge
            products:
              type: array
              items:
                $ref: '#/components/schemas/Product'
            reviews:
              type: array
              items:
                $ref: '#/components/schemas/Review'
            adverts:
              type: array
              items:
                $ref: '#/components/schemas/Advert'
    
    Product:
      type: object
      properties:
        id:
          type: integer
          example: 1
        business_id:
          type: integer
          example: 1
        name:
          type: string
          example: Safari Tour Package
        description:
          type: string
          example: Full day safari tour with lunch included
        price:
          type: number
          example: 1200
        image:
          type: string
          format: uri
          example: https://example.com/images/safari-tour.jpg
        created_at:
          type: string
          format: date-time
    
    Review:
      type: object
      properties:
        id:
          type: integer
          example: 1
        business_id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 2
        user_name:
          type: string
          example: Jane Smith
        rating:
          type: integer
          minimum: 1
          maximum: 5
          example: 5
        comment:
          type: string
          example: Wonderful experience, highly recommended!
        created_at:
          type: string
          format: date-time
    
    Advert:
      type: object
      properties:
        id:
          type: integer
          example: 1
        business_id:
          type: integer
          example: 1
        title:
          type: string
          example: Summer Special
        description:
          type: string
          example: 20% off all bookings in January
        image:
          type: string
          format: uri
          example: https://example.com/images/summer-special.jpg
        start_date:
          type: string
          format: date
          example: 2023-01-01
        end_date:
          type: string
          format: date
          example: 2023-01-31
        is_active:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
    
    Pagination:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        per_page:
          type: integer
          example: 20
        total_pages:
          type: integer
          example: 5
        total_items:
          type: integer
          example: 98
    
    Error:
      type: object
      properties:
        status:
          type: string
          example: error
        message:
          type: string
          example: An error occurred
        code:
          type: integer
          example: 400
